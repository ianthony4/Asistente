{
    "bienvenida": ["Hola. Soy tu Asistente Virtual. Fui creada para instruirte todo respecto a la Ejecucion de instrucciones. Antes de empezar ¿Podrias decirme tu nombre?"],
    
    "aprendizaje": ["Los computadores son sistemas sincronizados que operan con una instruccion de reloj. Las operaciones basicas, que son transferencias de datos dentro de la CPU, tienen una duracion minima determinada por el tiempo entre dos flancos consecutivos de la instruccion de reloj. Cuando un computador ejecuta una instruccion, sigue un orden especifico de operaciones basicas. En un mismo periodo de la instruccion de reloj, se pueden realizar varias operaciones basicas en paralelo, siempre y cuando no interfieran al compartir recursos como buses o elementos internos del procesador."],
    
    "fases":["Como se puede apreciar en la imagen, Las instrucciones tipicas que ejecuta un computador suelen dividirse en cuatro fases. Cada fase tiene una duracion mayor que un ciclo de la senal de reloj y contiene una serie de operaciones basicas que pueden ejecutarse en paralelo o en serie. Las fases que componen una instruccion son: Lectura. Decodificacion. Ejecucion. Almacenamiento."],
    
    "lectura":["La fase de lectura de instruccion es la primera fase del ciclo de instruccion de un procesador. En esta fase, el procesador busca la instruccion en la memoria. El primer paso es cargar el registro MAR con el contenido del registro PC. Luego, el procesador activa las senales de lectura de la memoria y guarda el dato en el registro MDR. Finalmente, el procesador transfiere el dato al registro IR. Este proceso se realiza dos veces en el ejemplo del computador porque las instrucciones son de 16 bits, mientras que los buses externos de datos y la memoria se consideran con una longitud de palabra de 8 bits."],
    
    "decodificacion":["En esta fase, la CPU interpreta la instruccion almacenada en el registro IR. La decodificacion implica entender que operacion se debe realizar y que datos se necesitan. Ademas, en esta etapa, se determinan las ubicaciones de memoria o registros donde se encuentran los operandos. La CPU puede cargar los operandos en registros internos para su posterior procesamiento."],
    
    "ejecucion":["Una vez que la CPU ha decodificado la instruccion y ha adquirido los operandos, se procede a realizar la operacion indicada por la instruccion. Esto puede implicar operaciones aritmeticas, logicas o de transferencia de datos. En esta fase, los datos se procesan y se generan los resultados de acuerdo con la operacion especificada."],
    
    "almacenamiento":["Finalmente, en esta fase, los resultados de la operacion se almacenan en la ubicacion adecuada, que puede ser en la memoria, en registros internos o en otro lugar. Ademas, si es necesario actualizar el estado de los registros, se realiza en esta etapa. Esto asegura que los resultados esten disponibles para instrucciones posteriores o para la transferencia a dispositivos de salida, si es necesario."],

    "PE PREGUNTA 01": ["PRIMERA PREGUNTA: ¿Cual es el objetivo principal del pensamiento computacional?",
                        "a) Resolver problemas utilizando algoritmos y abstraccion. b) Programar robots y sistemas autonomos. c) Diseñar hardware de computadoras."],
    "PE PREGUNTA 02": ["SEGUNDA PREGUNTA: 2. El primer paso del pensamiento computacional es: identificar el problema.",
                        "¿VERDADERO? o ¿FALSO?"],
    "PE PREGUNTA 03": ["TERCERA PREGUNTA: ¿Qué es un algoritmo en terminos de pensamiento computacional?",
                        "1) Un patron de diseño visual 2) Un lenguaje de programacion 3) Una secuencia de pasos para resolver un problema 4) Una representacion grafica de datos"],
    "EJ PREGUNTA 01": {
        "pregunta": ["¿Qué función realiza la fase de \"Búsqueda de Operandos\" en la ejecución de una instrucción en una computadora?"],
        "alternativas": ["Decodificar la instrucción", "Leer la instrucción desde la memoria", "Obtener los operandos necesarios para la instrucción", "Almacenar los resultados de la instrucción"],
        "respuesta": ["Obtener los operandos necesarios para la instrucción"]
    },
    "EJ PREGUNTA 02": {
        "pregunta": ["En una instrucción JMZ #456, el programa saltará a la dirección de memoria \"#456\" si el indicador de cero (Z) en el registro de estado está activo."],
        "alternativas": ["Verdadero", "Falso"],
        "respuesta": ["Verdadero"]
    },
    "add":["Primera etapa: Se copia la direccion de la instruccion en el registro de direcciones MAR.",
    "Segunda etapa: Se aumenta la direccion en el registro PC para apuntar a la proxima instruccion.",
    "Tercera etapa: Se lee la parte baja de la instruccion en la memoria y se almacena en el registro MDR.",
    "Cuarta etapa: Se transfiere la parte baja de la instruccion al registro de instruccion IR. Dependiendo de la arquitectura, esto puede considerarse little-endian o big-endian segun la ordenacion de datos en memoria.",
    "Quinta etapa: Se actualiza el registro MAR con la direccion del segundo byte de la instruccion.",
    "Sexta etapa: Se incrementa el PC para apuntar a la siguiente instruccion.",
    "Septima etapa: Se lee la parte alta de la instruccion en la memoria y se almacena en el registro MDR.",
    "Octava etapa: La parte alta de la instruccion se transfiere al registro IR.",
    "Novena etapa: Se carga la direccion de un dato en el registro MAR para su lectura en la memoria.",
    "Decima etapa: Se lee el dato de la memoria, cuya direccion esta en el registro IR.",
    "Undecima etapa: El dato se coloca en el registro MDR y se suma al registro AC en una ALU. Luego, se carga el resultado en el registro AC."],
    "busqueda":["Primer Periodo: Transfiere la direccion de la proxima instruccion desde el registro PC al registro MAR, lo que se logra habilitando las senales PC-E y MAR-C.",
    "Segundo Periodo: Accede a la memoria para leer la instruccion, activando las senales CS y RD. Luego, carga la parte baja de la instruccion en el registro MDR y aumenta el PC para apuntar a la proxima posicion de memoria que contiene la parte alta de la instruccion.",
    "Tercer Periodo:Transfiere la parte baja de la instruccion desde el MDR al registro IR y prepara una nueva lectura de memoria al copiar la direccion de MAR al PC.",
    "Cuarto Periodo:Repite el proceso de acceso a memoria para leer la parte alta de la instruccion y aumenta nuevamente el PC.",
    "Quinto Periodo: carga la parte alta de la instruccion en el registro IR y, al mismo tiempo, decodifica la instruccion para que la CPU comprenda que operacion realizara."],
    "operandos":["1 Decodificacion de la Instruccion: La UC interpreta la instruccion en el Registro de Instruccion (IR) para comprender la operacion y los datos necesarios.",
    "2 Busqueda de Operandos: La UC localiza la direccion del primer dato requerido.",
    "3 Transferencia al Registro MAR: La direccion del dato se mueve al Registro de Direccion de Memoria (MAR).",
    "4 Lectura de la Memoria: Se obtiene el dato deseado desde la memoria y se almacena en el Registro de Datos de Memoria (MDR)."],
    "ejecalmc":["Fase de Ejecucion y Almacenamiento del Resultado:",
    "En esta fase, la CPU realiza la instruccion AC = AC + MAR en un solo ciclo de reloj. Para lograrlo, la CPU debe seguir estos pasos:",
    "1 Conectar el registro MDR a la entrada B de la ALU mediante la activacion de la senal MDR-EI.",
    "2 Indicar a la ALU la operacion que debe realizar al activar las senales OP.",
    "3 Luego, sincronizado con el flanco de subida de la senal de reloj, activar la senal de carga del acumulador (AC-C).",
    "Despues de ejecutar la instruccion, se actualiza el registro de estado que contiene los bits de condicion. Esto se logra al activar la senal de flanco (E-C) cuando la ALU completa la operacion de suma, en el periodo 8."],
    "sw":["La instruccion consta de 4 bits para el codigo de instruccion y 12 bits para la direccion de memoria donde se guardara el valor de AC.",
    "El proceso de ejecucion de esta instruccion se divide en tres fases:",
    "1 Busqueda de la Instruccion: Similar a la fase de busqueda de instruccion en el ejemplo anterior, se obtiene la instruccion desde la memoria.",
    "2Fase de Ejecucion: Esta fase ocurre en los ciclos 6 y 7. En el ciclo 6, la direccion de memoria se carga en el registro MAR y el contenido de AC se mueve al registro MDR. En el ciclo siguiente, se realiza la escritura en memoria activando las senales CS, WR, MDR-EE y MAR-E.",
    "3 Preparacion para la Siguiente Instruccion: Los ciclos restantes en el cronograma corresponden al inicio de la proxima instruccion."],
    "jwz":["La instruccion JMZ #456 es una orden en un programa de computadora que decide si dar un salto o continuar ejecutando las instrucciones siguientes. Esto depende de si el indicador de cero (Z) esta activo en el registro de estado.",
    "Si Z esta activo (Z=1), el programa saltara a la direccion de memoria “#456” y continuara desde alli. Es como cambiar a una pagina especifica en un libro.",
    "Si Z no esta activo (Z=0), el programa seguira ejecutando las instrucciones en orden sin saltar a ninguna direccion.",
    "En el cronograma de ejecucion de esta instruccion, despues de que la computadora capture la instruccion, se revisa el indicador de cero. Si la condicion para saltar no se cumple (Z=0), la computadora continua con la siguiente instruccion en el orden. Pero si la condicion se cumple (Z=1), la computadora carga la direccion de memoria “#456” en el contador de programa (PC) y luego sigue ejecutando desde alli."]
}




